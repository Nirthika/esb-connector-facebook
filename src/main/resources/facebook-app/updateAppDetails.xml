<?xml version="1.0" encoding="UTF-8"?>
<!--
~ Copyright (c) 2016, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
~
~ WSO2 Inc. licenses this file to you under the Apache License,
~ Version 2.0 (the "License"); you may not use this file except
~ in compliance with the License.
~ You may obtain a copy of the License at
~
~    http://www.apache.org/licenses/LICENSE-2.0
~
~ Unless required by applicable law or agreed to in writing,
~ software distributed under the License is distributed on an
~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
~ KIND, either express or implied.  See the License for the
~ specific language governing permissions and limitations
~ under the License.
-->
<template name="updateAppDetails" xmlns="http://ws.apache.org/ns/synapse">
    <parameter name="appId" description="The appId"/>
    <parameter name="migrations" description="Migrations settings for this app"/>
    <parameter name="canvasUrl" description="The non-secure URL from which Canvas app content is loaded"/>
    <parameter name="restrictions" description="Demographic restrictions set for this app"/>
    <parameter name="appName" description="App name"/>
    <parameter name="appType" description="App type"/>
    <parameter name="authDialogHeadline" description="One line description of an app that appears in the Login Dialog"/>
    <parameter name="authDialogPermsExplanation"
               description="The text to explain why an app needs additional permissions that appears in the Login Dialog"/>
    <parameter name="authReferralDefaultActivityPrivacy"
               description="The default privacy setting selected for Open Graph activities in the Login Dialog"/>
    <parameter name="authReferralEnabled" description="Indicates whether Authenticated Referrals are enabled"/>
    <parameter name="authReferralExtendedPerms"
               description="Extended permissions that a user can choose to grant when Authenticated Referrals are enabled"/>
    <parameter name="authReferralFriendPerms"
               description="Basic friends permissions that a user must grant when Authenticated Referrals are enabled"/>
    <parameter name="authReferralUserPerms"
               description="Basic user permissions that a user must grant when Authenticated Referrals are enabled"/>
    <parameter name="authReferralResponseType"
               description="The format that an app receives the auth token from the Login Dialog in"/>
    <parameter name="canvasFluidHeight"
               description="Indicates whether app uses fluid or settable height values for Canvas"/>
    <parameter name="canvasFluidWidth" description="Indicates whether app uses fluid or fixed width values for Canvas"/>
    <parameter name="category" description="The category of this app"/>
    <parameter name="configuredIosSso" description="Enables or disables SSO on iOS for this app"/>
    <parameter name="iphoneAppStoreId" description="ID of this app in the iPhone App Store"/>
    <parameter name="pageTabDefaultName" description="The title of the app when used in a Page Tab"/>
    <parameter name="socialDiscovery"
               description="Indicates whether app usage stories show up in the Ticker or News Feed"/>
    <parameter name="subcategory" description="The subcategory this app can be found under"/>
    <parameter name="appDomains" description="Domains and subdomains this app can use"/>
    <parameter name="authDialogDataHelpUrl" description="The URL of a special landing page"/>
    <parameter name="canvasUrl" description="The non-secure URL from which Canvas app content is loaded"/>
    <parameter name="contactEmail" description="Email address listed for users to contact developers"/>
    <parameter name="createdTime" description="Timestamp that indicates when this app was created"/>
    <parameter name="deauthCallbackUrl" description="URL that is pinged whenever a user removes the app"/>
    <parameter name="mobileWebUrl" description="URL to which Mobile users will be directed when using the app"/>
    <parameter name="namespace" description="The namespace for the app"/>
    <parameter name="pageTabUrl" description="The non-secure URL from which Page Tab app content is loaded"/>
    <parameter name="privacyPolicyUrl" description="The URL that links to a Privacy Policy for the app"/>
    <parameter name="secureCanvasUrl" description="The secure URL from which Canvas app content is loaded"/>
    <parameter name="securePageTabUrl" description="The secure URL from which Page Tab app content is loaded"/>
    <parameter name="serverIpWhitelist"
               description="App requests must originate from this comma-separated list of IP addresses"/>
    <parameter name="termsOfServiceUrl" description="URL to Terms of Service which is linked to in Login Dialog"/>
    <parameter name="userSupportEmail" description="Main contact email for this app"/>
    <parameter name="userSupportUrl" description="URL of support for users of an app shown in Canvas footer"/>
    <parameter name="websiteUrl" description="URL of a website that integrates with this app"/>
    <sequence>
        <property name="uri.var.appId" expression="$func:appId"/>
        <property name="uri.var.migrations" expression="$func:migrations"/>
        <property name="uri.var.restrictions" expression="$func:restrictions"/>
        <property name="uri.var.appName" expression="$func:appName"/>
        <property name="uri.var.appType" expression="$func:appType"/>
        <property name="uri.var.authDialogHeadline" expression="$func:authDialogHeadline"/>
        <property name="uri.var.authDialogPermsExplanation" expression="$func:authDialogPermsExplanation"/>
        <property name="uri.var.authReferralDefaultActivityPrivacy"
                  expression="$func:authReferralDefaultActivityPrivacy"/>
        <property name="uri.var.authReferralEnabled" expression="$func:authReferralEnabled"/>
        <property name="uri.var.authReferralExtendedPerms" expression="$func:authReferralExtendedPerms"/>
        <property name="uri.var.authReferralFriendPerms" expression="$func:authReferralFriendPerms"/>
        <property name="uri.var.authReferralUserPerms" expression="$func:authReferralUserPerms"/>
        <property name="uri.var.authReferralResponseType" expression="$func:authReferralResponseType"/>
        <property name="uri.var.canvasFluidHeight" expression="$func:canvasFluidHeight"/>
        <property name="uri.var.canvasFluidWidth" expression="$func:canvasFluidWidth"/>
        <property name="uri.var.category" expression="$func:category"/>
        <property name="uri.var.configuredIosSso" expression="$func:configuredIosSso"/>
        <property name="uri.var.iphoneAppStoreId" expression="$func:iphoneAppStoreId"/>
        <property name="uri.var.pageTabDefaultName" expression="$func:pageTabDefaultName"/>
        <property name="uri.var.socialDiscovery" expression="$func:socialDiscovery"/>
        <property name="uri.var.subcategory" expression="$func:subcategory"/>
        <property name="uri.var.appDomains" expression="$func:appDomains"/>
        <property name="uri.var.authDialogDataHelpUrl" expression="$func:authDialogDataHelpUrl"/>
        <property name="uri.var.canvasUrl" expression="$func:canvasUrl"/>
        <property name="uri.var.contactEmail" expression="$func:contactEmail"/>
        <property name="uri.var.createdTime" expression="$func:createdTime"/>
        <property name="uri.var.deauthCallbackUrl" expression="$func:deauthCallbackUrl"/>
        <property name="uri.var.mobileWebUrl" expression="$func:mobileWebUrl"/>
        <property name="uri.var.namespace" expression="$func:namespace"/>
        <property name="uri.var.pageTabUrl" expression="$func:pageTabUrl"/>
        <property name="uri.var.privacyPolicyUrl" expression="$func:privacyPolicyUrl"/>
        <property name="uri.var.secureCanvasUrl" expression="$func:secureCanvasUrl"/>
        <property name="uri.var.securePageTabUrl" expression="$func:securePageTabUrl"/>
        <property name="uri.var.serverIpWhitelist" expression="$func:serverIpWhitelist"/>
        <property name="uri.var.termsOfServiceUrl" expression="$func:termsOfServiceUrl"/>
        <property name="uri.var.userSupportEmail" expression="$func:userSupportEmail"/>
        <property name="uri.var.userSupportUrl" expression="$func:userSupportUrl"/>
        <property name="uri.var.websiteUrl" expression="$func:websiteUrl"/>
        <payloadFactory media-type="json">
            <format>
                {
                "access_token":"$1"
                }
            </format>
            <args>
                <arg expression="get-property('uri.var.accessToken')"/>
            </args>
        </payloadFactory>
        <script language="js"><![CDATA[
            var migrations=mc.getProperty('uri.var.migrations');
            var restrictions=mc.getProperty('uri.var.restrictions');
            var appName=mc.getProperty('uri.var.appName');
            var appType=mc.getProperty('uri.var.appType');
            var authDialogHeadline=mc.getProperty('uri.var.authDialogHeadline');
            var authDialogPermsExplanation=mc.getProperty('uri.var.authDialogPermsExplanation');
            var authReferralDefaultActivityPrivacy=mc.getProperty('uri.var.authReferralDefaultActivityPrivacy');
            var authReferralEnabled=mc.getProperty('uri.var.authReferralEnabled');
            var authReferralExtendedPerms=mc.getProperty('uri.var.authReferralExtendedPerms');
            var authReferralFriendPerms=mc.getProperty('uri.var.authReferralFriendPerms');
            var authReferralUserPerms=mc.getProperty('uri.var.authReferralUserPerms');
            var authReferralResponseType=mc.getProperty('uri.var.authReferralResponseType');
            var canvasFluidHeight=mc.getProperty('uri.var.canvasFluidHeight');
            var canvasFluidWidth=mc.getProperty('uri.var.canvasFluidWidth');
            var category=mc.getProperty('uri.var.category');
            var configuredIosSso=mc.getProperty('uri.var.configuredIosSso');
            var iphoneAppStoreId=mc.getProperty('uri.var.iphoneAppStoreId');
            var pageTabDefaultName=mc.getProperty('uri.var.pageTabDefaultName');
            var socialDiscovery=mc.getProperty('uri.var.socialDiscovery');
            var subcategory=mc.getProperty('uri.var.subcategory');
            var appDomains=mc.getProperty('uri.var.appDomains');
            var authDialogDataHelpUrl=mc.getProperty('uri.var.authDialogDataHelpUrl');
            var canvasUrl=mc.getProperty('uri.var.canvasUrl');
            var contactEmail=mc.getProperty('uri.var.contactEmail');
            var createdTime=mc.getProperty('uri.var.createdTime');
            var deauthCallbackUrl=mc.getProperty('uri.var.deauthCallbackUrl');
            var mobileWebUrl=mc.getProperty('uri.var.mobileWebUrl');
            var namespace=mc.getProperty('uri.var.namespace');
            var pageTabUrl=mc.getProperty('uri.var.pageTabUrl');
            var privacyPolicyUrl=mc.getProperty('uri.var.privacyPolicyUrl');
            var secureCanvasUrl=mc.getProperty('uri.var.secureCanvasUrl');
            var securePageTabUrl=mc.getProperty('uri.var.securePageTabUrl');
            var serverIpWhitelist=mc.getProperty('uri.var.serverIpWhitelist');
            var termsOfServiceUrl=mc.getProperty('uri.var.termsOfServiceUrl');
            var userSupportEmail=mc.getProperty('uri.var.userSupportEmail');
            var userSupportUrl=mc.getProperty('uri.var.userSupportUrl');
            var websiteUrl=mc.getProperty('uri.var.websiteUrl');
            
            payload = mc.getPayloadJSON();

            if(migrations !=null && migrations != ""){
                payload.migrations=migrations;
            }

            if(restrictions !=null && restrictions != ""){
                payload.restrictions=restrictions;
            }

            if(appName !=null && appName != ""){
                payload.app_name=appName;
            }

            if(appType !=null && appType != ""){
                payload.app_type=appType;
            }
            
            if(authDialogHeadline !=null && authDialogHeadline != ""){
                payload.auth_dialog_headline=authDialogHeadline;
            }
                	
            if(authDialogPermsExplanation != null && authDialogPermsExplanation != ""){
                payload.auth_dialog_perms_explanation = authDialogPermsExplanation;
            }
            
            if(authReferralDefaultActivityPrivacy !=null && authReferralDefaultActivityPrivacy != ""){
                payload.auth_referral_default_activity_privacy=authReferralDefaultActivityPrivacy;
            }
            
            if(authReferralEnabled !=null && authReferralEnabled != ""){
                payload.auth_referral_enabled=authReferralEnabled;
            }
            
            if(authReferralExtendedPerms !=null && authReferralExtendedPerms != ""){
                payload.auth_referral_extended_perms=authReferralExtendedPerms;
            }
            
            if(authReferralFriendPerms !=null && authReferralFriendPerms != ""){
                payload.auth_referral_friend_perms=authReferralFriendPerms;
            }
            
            if(authReferralUserPerms !=null && authReferralUserPerms != ""){
                payload.auth_referral_user_perms=authReferralUserPerms;
            }
            
            if(authReferralResponseType !=null && authReferralResponseType != ""){
                payload.auth_referral_response_type=authReferralResponseType;
            }
            
            if(canvasFluidHeight !=null && canvasFluidHeight != ""){
                payload.canvas_fluid_height=canvasFluidHeight;
            }
            
            if(canvasFluidWidth !=null && canvasFluidWidth != ""){
                payload.canvas_fluid_width=canvasFluidWidth;
            }

            if(category !=null && category != ""){
                payload.category=category;
            }

            if(configuredIosSso !=null && configuredIosSso != ""){
                payload.configured_ios_sso=configuredIosSso;
            }

            if(iphoneAppStoreId !=null && iphoneAppStoreId != ""){
                payload.iphone_app_store_id=iphoneAppStoreId;
            }

            if(socialDiscovery !=null && socialDiscovery != ""){
                payload.social_discovery=socialDiscovery;
            }

            if(subcategory !=null && subcategory != ""){
                payload.subcategory=subcategory;
            }

            if(pageTabDefaultName !=null && pageTabDefaultName != ""){
                payload.page_tab_default_name=pageTabDefaultName;
            }

            if(appDomains != null && appDomains != ""){
                payload.app_domains = appDomains;
            }

            if(authDialogDataHelpUrl !=null && authDialogDataHelpUrl != ""){
                payload.auth_dialog_data_help_url=authDialogDataHelpUrl;
            }

            if(canvasUrl !=null && canvasUrl != ""){
                payload.canvas_url=canvasUrl;
            }

            if(contactEmail !=null && contactEmail != ""){
                payload.contact_email=contactEmail;
            }

            if(createdTime !=null && createdTime != ""){
                payload.created_time=createdTime;
            }

            if(deauthCallbackUrl !=null && deauthCallbackUrl != ""){
                payload.deauth_callback_url=deauthCallbackUrl;
            }

            if(mobileWebUrl !=null && mobileWebUrl != ""){
                payload.mobile_web_url=mobileWebUrl;
            }
            
            if(namespace !=null && namespace != ""){
                payload.namespace=namespace;
            }

            if(pageTabUrl !=null && pageTabUrl != ""){
                payload.page_tab_url=pageTabUrl;
            }
            
            if(privacyPolicyUrl !=null && privacyPolicyUrl != ""){
                payload.privacy_policy_url=privacyPolicyUrl;
            }

            if(secureCanvasUrl !=null && secureCanvasUrl != ""){
                payload.secure_canvas_url=secureCanvasUrl;
            }
            
            if(securePageTabUrl !=null && securePageTabUrl != ""){
                payload.secure_page_tab_url=securePageTabUrl;
            }
            
            if(serverIpWhitelist !=null && serverIpWhitelist != ""){
                payload.server_ip_whitelist=serverIpWhitelist;
            }

            if(termsOfServiceUrl !=null && termsOfServiceUrl != ""){
                payload.terms_of_service_url=termsOfServiceUrl;
            }
            
            if(userSupportEmail !=null && userSupportEmail != ""){
                payload.user_support_email=userSupportEmail;
            }
            
            if(userSupportUrl !=null && userSupportUrl != ""){
                payload.user_support_url=userSupportUrl;
            }
            
            if(websiteUrl !=null && websiteUrl != ""){
                payload.website_url=websiteUrl;
            }

           mc.setPayloadJSON(payload);
         ]]></script>
        <property name="messageType" value="application/x-www-form-urlencoded" scope="axis2"/>
        <call>
            <endpoint>
                <http method="post" uri-template="{uri.var.apiUrl}/{uri.var.apiVersion}/{uri.var.appId}"/>
            </endpoint>
        </call>
        <!-- Remove response custom header information -->
        <header name="X-FB-Debug" scope="transport" action="remove"/>
        <header name="X-FB-Rev" scope="transport" action="remove"/>
        <header name="WWW-Authenticate" scope="transport" action="remove"/>
    </sequence>
</template>