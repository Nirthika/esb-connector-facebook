<?xml version="1.0" encoding="UTF-8"?>
<!--
~ Copyright (c) 2016, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
~
~ WSO2 Inc. licenses this file to you under the Apache License,
~ Version 2.0 (the "License"); you may not use this file except
~ in compliance with the License.
~ You may obtain a copy of the License at
~
~    http://www.apache.org/licenses/LICENSE-2.0
~
~ Unless required by applicable law or agreed to in writing,
~ software distributed under the License is distributed on an
~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
~ KIND, either express or implied.  See the License for the
~ specific language governing permissions and limitations
~ under the License.
-->
<template name="updatePageDetails" xmlns="http://ws.apache.org/ns/synapse">
    <parameter name="pageId" description="Unique identifier of the page"/>
    <parameter name="offsetY"
               description="The vertical offset in pixels of the photo from the bottom"/>
    <parameter name="offsetX"
               description="The horizontal offset in pixels of the photo from the left"/>
    <parameter name="focusY" description="Cover photo focus y"/>
    <parameter name="focusX" description="Cover photo focus x"/>
    <parameter name="zoomScaleX" description="Cover photo zoom scale x"/>
    <parameter name="zoomScaleY" description="Cover photo zoom scale y"/>
    <parameter name="noFeedStory" description="Don't generate a feed story for the cover photo"/>
    <parameter name="noNotification" description="Don't generate a notification for the cover photo"/>
    <parameter name="cover" description="Information about the Page's cover photo"/>
    <parameter name="about" description="About the page"/>
    <parameter name="bio" description="The name of the Page"/>
    <parameter name="companyOverview"
               description="The company overview. Applicable to Companies"/>
    <parameter name="generalInfo" description="General information provided by the Page"/>
    <parameter name="description" description="The description of the Page"/>
    <parameter name="directedBy" description="The director of the film."/>
    <parameter name="impressum" description="Legal information about the Page publishers"/>
    <parameter name="mission"
               description="The company mission. Applicable to Companies"/>
    <parameter name="phone" description="Phone number provided by a Page"/>
    <parameter name="website" description="The URL of the Page's website"/>
    <parameter name="parking"
               description="Information about the parking available at a place."/>
    <parameter name="hours"
               description="Indicates the opening hours for this location"/>
    <parameter name="location" description="The location of this place. Applicable to all Places"/>
    <parameter name="priceRange" description="Price range of the business."/>
    <parameter name="paymentOptions" description="Payment options accepted by the business."/>
    <parameter name="restaurantServices" description="Restaurant services"/>
    <parameter name="restaurantSpecialties" description="Restaurant specialties"/>
    <parameter name="emails" description="The emails listed in the About section of a Page"/>
    <parameter name="foodStyles" description="The restaurant's food styles. "/>
    <parameter name="attire" description="Dress code of the business. "/>
    <parameter name="publicTransit" description="Public transit to the business."/>
    <parameter name="generalManager" description="General manager of the business."/>
    <parameter name="culinaryTeam" description="Culinary team of the business."/>
    <parameter name="startInfo" description="Information about when the entity represented by the Page was started."/>
    <parameter name="genre" description="The genre of the film."/>
    <parameter name="plotOutline" description="The plot outline of the film."/>
    <parameter name="scrape" description="Re-scrape the website associated with this Page"/>
    <parameter name="categoryList" description="The Page's sub-categories"/>
    <parameter name="isAlwaysOpen" description="Is this location always open"/>
    <parameter name="isPublished" description="Indicates whether the Page is published and visible to non-admins"/>
    <parameter name="contactAddress" description="The mailing or contact address for this page."/>
    <parameter name="isPermanentlyClosed" description="For businesses that are no longer operating"/>
    <parameter name="ignoreCoordinateWarnings"
               description="Ignore coordinate warnings when updating this Page's location"/>
    <sequence>
        <property name="uri.var.pageId" expression="$func:pageId"/>
        <property name="uri.var.offsetY" expression="$func:offsetY"/>
        <property name="uri.var.offsetX" expression="$func:offsetX"/>
        <property name="uri.var.focusY" expression="$func:focusY"/>
        <property name="uri.var.focusX" expression="$func:focusX"/>
        <property name="uri.var.zoomScaleX" expression="$func:zoomScaleX"/>
        <property name="uri.var.zoomScaleY" expression="$func:zoomScaleY"/>
        <property name="uri.var.noFeedStory" expression="$func:noFeedStory"/>
        <property name="uri.var.noNotification" expression="$func:noNotification"/>
        <property name="uri.var.cover" expression="$func:cover"/>
        <property name="uri.var.about" expression="$func:about"/>
        <property name="uri.var.companyOverview" expression="$func:companyOverview"/>
        <property name="uri.var.bio" expression="$func:bio"/>
        <property name="uri.var.description" expression="$func:description"/>
        <property name="uri.var.directedBy" expression="$func:directedBy"/>
        <property name="uri.var.impressum" expression="$func:impressum"/>
        <property name="uri.var.mission" expression="$func:mission"/>
        <property name="uri.var.parking" expression="$func:parking"/>
        <property name="uri.var.phone" expression="$func:phone"/>
        <property name="uri.var.website" expression="$func:website"/>
        <property name="uri.var.hours" expression="$func:hours"/>
        <property name="uri.var.location" expression="$func:location"/>
        <property name="uri.var.priceRange" expression="$func:priceRange"/>
        <property name="uri.var.paymentOptions" expression="$func:paymentOptions"/>
        <property name="uri.var.restaurantServices" expression="$func:restaurantServices"/>
        <property name="uri.var.restaurantSpecialties" expression="$func:restaurantSpecialties"/>
        <property name="uri.var.emails" expression="$func:emails"/>
        <property name="uri.var.foodStyles" expression="$func:foodStyles"/>
        <property name="uri.var.attire" expression="$func:attire"/>
        <property name="uri.var.publicTransit" expression="$func:publicTransit"/>
        <property name="uri.var.generalManager" expression="$func:generalManager"/>
        <property name="uri.var.culinaryTeam" expression="$func:culinaryTeam"/>
        <property name="uri.var.startInfo" expression="$func:startInfo"/>
        <property name="uri.var.genre" expression="$func:genre"/>
        <property name="uri.var.plotOutline" expression="$func:plotOutline"/>
        <property name="uri.var.scrape" expression="$func:scrape"/>
        <property name="uri.var.generalInfo" expression="$func:generalInfo"/>
        <property name="uri.var.categoryList" expression="$func:categoryList"/>
        <property name="uri.var.isAlwaysOpen" expression="$func:isAlwaysOpen"/>
        <property name="uri.var.isPublished" expression="$func:isPublished"/>
        <property name="uri.var.contactAddress" expression="$func:contactAddress"/>
        <property name="uri.var.ignoreCoordinateWarnings" expression="$func:ignoreCoordinateWarnings"/>
        <property name="uri.var.isPermanentlyClosed" expression="$func:isPermanentlyClosed"/>
        <payloadFactory media-type="json">
            <format>
                {
                "access_token":"$1"
                }
            </format>
            <args>
                <arg expression="get-property('uri.var.accessToken')"/>
            </args>
        </payloadFactory>
        <script language="js"><![CDATA[
            var offsetY=mc.getProperty('uri.var.offsetY');
            var offsetX=mc.getProperty('uri.var.offsetX');
            var focusY=mc.getProperty('uri.var.focusY');
            var focusX=mc.getProperty('uri.var.focusX');
            var zoomScaleX=mc.getProperty('uri.var.zoomScaleX');
            var zoomScaleY=mc.getProperty('uri.var.zoomScaleY');
            var noFeedStory=mc.getProperty('uri.var.noFeedStory');
            var noNotification=mc.getProperty('uri.var.noNotification');
            var cover=mc.getProperty('uri.var.cover');
            var about=mc.getProperty('uri.var.about');
            var bio=mc.getProperty('uri.var.bio');
            var companyOverview=mc.getProperty('uri.var.companyOverview');
            var description=mc.getProperty('uri.var.description');
            var directedBy=mc.getProperty('uri.var.directedBy');
            var impressum=mc.getProperty('uri.var.impressum');
            var mission=mc.getProperty('uri.var.mission');
            var parking=mc.getProperty('uri.var.parking');
            var phone=mc.getProperty('uri.var.phone');
            var website=mc.getProperty('uri.var.website');
            var hours=mc.getProperty('uri.var.hours');
            var location=mc.getProperty('uri.var.location');
            var priceRange=mc.getProperty('uri.var.priceRange');
            var paymentOptions=mc.getProperty('uri.var.paymentOptions');
            var restaurantServices=mc.getProperty('uri.var.restaurantServices');
            var restaurantSpecialties=mc.getProperty('uri.var.restaurantSpecialties');
            var emails=mc.getProperty('uri.var.emails');
            var foodStyles=mc.getProperty('uri.var.foodStyles');
            var attire=mc.getProperty('uri.var.attire');
            var publicTransit=mc.getProperty('uri.var.publicTransit');
            var generalManager=mc.getProperty('uri.var.generalManager');
            var culinaryTeam=mc.getProperty('uri.var.culinaryTeam');
            var startInfo=mc.getProperty('uri.var.startInfo');
            var genre=mc.getProperty('uri.var.genre');
            var plotOutline=mc.getProperty('uri.var.plotOutline');
            var scrape=mc.getProperty('uri.var.scrape');
            var generalInfo=mc.getProperty('uri.var.generalInfo');
            var categoryList=mc.getProperty('uri.var.categoryList');
            var isAlwaysOpen=mc.getProperty('uri.var.isAlwaysOpen');
            var isPublished=mc.getProperty('uri.var.isPublished');
            var contactAddress=mc.getProperty('uri.var.contactAddress');
            var ignoreCoordinateWarnings=mc.getProperty('uri.var.ignoreCoordinateWarnings');
            var isPermanentlyClosed=mc.getProperty('uri.var.isPermanentlyClosed');

            payload = mc.getPayloadJSON();

            if(offsetY != null && offsetY != ""){
                payload.offset_y = offsetY;
            }

            if(offsetX !=null && offsetX != ""){
                payload.offset_x=offsetX;
            }

            if(focusY != null && focusY != ""){
                payload.focus_y = focusY;
            }

            if(focusX !=null && focusX != ""){
                payload.focus_x=focusX;
            }

            if(zoomScaleX !=null && zoomScaleX != ""){
                payload.zoom_scale_x=zoomScaleX;
            }

            if(zoomScaleY !=null && zoomScaleY != ""){
                payload.zoom_scale_y=zoomScaleY;
            }

            if(noFeedStory != null && noFeedStory != ""){
                payload.no_feed_story = noFeedStory;
            }

            if(noNotification !=null && noNotification != ""){
                payload.no_notification=noNotification;
            }

            if(about != null && about != ""){
                payload.about = about;
            }

            if(companyOverview !=null && companyOverview != ""){
                payload.company_overview=companyOverview;
            }

            if(cover !=null && cover != ""){
                payload.cover=cover;
            }

            if(bio != null && bio != ""){
                payload.bio = bio;
            }

            if(description !=null && description != ""){
                payload.description=description;
            }

            if(directedBy !=null && directedBy != ""){
                payload.directed_by=directedBy;
            }

            if(impressum != null && impressum != ""){
                payload.impressum = impressum;
            }

            if(hours !=null && hours != ""){
                payload.hours=hours;
            }

            if(mission !=null && mission != ""){
                payload.mission=mission;
            }

            if(parking !=null && parking != ""){
                payload.parking=parking;
            }

            if(phone !=null && phone != ""){
                payload.phone=phone;
            }

            if(website !=null && website != ""){
                payload.website=website;
            }

            if(location !=null && location != ""){
                payload.location=location;
            }

            if(priceRange !=null && priceRange != ""){
                payload.price_range=priceRange;
            }

            if(paymentOptions !=null && paymentOptions != ""){
                payload.payment_options=paymentOptions;
            }

            if(restaurantServices != null && restaurantServices != ""){
                payload.restaurant_services = restaurantServices;
            }

            if(restaurantSpecialties !=null && restaurantSpecialties != ""){
                payload.restaurant_specialties=restaurantSpecialties;
            }

            if(emails !=null && emails != ""){
                payload.emails=emails;
            }

            if(foodStyles !=null && foodStyles != ""){
                payload.foodStyles=foodStyles;
            }

            if(attire !=null && attire != ""){
                payload.attire=attire;
            }

            if(publicTransit !=null && publicTransit != ""){
                payload.public_transit=publicTransit;
            }

            if(generalManager !=null && generalManager != ""){
                payload.general_manager=generalManager;
            }

            if(culinaryTeam !=null && culinaryTeam != ""){
                payload.culinary_team=culinaryTeam;
            }

            if(startInfo !=null && startInfo != ""){
                payload.start_info=startInfo;
            }

            if(genre !=null && genre != ""){
                payload.genre=genre;
            }

            if(plotOutline != null && plotOutline != ""){
                payload.plot_outline = plotOutline;
            }

            if(scrape !=null && scrape != ""){
                payload.scrape=scrape;
            }

            if(generalInfo !=null && generalInfo != ""){
                payload.general_info=generalInfo;
            }

            if(categoryList !=null && categoryList != ""){
                payload.category_list=categoryList;
            }

            if(isAlwaysOpen !=null && isAlwaysOpen != ""){
                payload.is_always_open=isAlwaysOpen;
            }

            if(isPublished !=null && isPublished != ""){
                payload.is_published=isPublished;
            }
            if(contactAddress !=null && contactAddress != ""){
                payload.contact_address=contactAddress;
            }
            if(ignoreCoordinateWarnings !=null && ignoreCoordinateWarnings != ""){
                payload.ignore_coordinate_warnings=ignoreCoordinateWarnings;
            }
            if(isPermanentlyClosed !=null && isPermanentlyClosed != ""){
                payload.is_permanently_closed=isPermanentlyClosed;
            }

            mc.setPayloadJSON(payload);
        ]]></script>
        <property name="messageType" value="application/x-www-form-urlencoded" scope="axis2"/>
        <call>
            <endpoint>
                <http method="post" uri-template="{uri.var.apiUrl}/{uri.var.apiVersion}/{uri.var.pageId}"/>
            </endpoint>
        </call>
        <!-- Remove response custom header information -->
        <header name="X-FB-Debug" scope="transport" action="remove"/>
        <header name="X-FB-Rev" scope="transport" action="remove"/>
        <header name="WWW-Authenticate" scope="transport" action="remove"/>
    </sequence>
</template>