<?xml version="1.0" encoding="UTF-8"?>
<!--
~ Copyright (c) 2016, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
~
~ WSO2 Inc. licenses this file to you under the Apache License,
~ Version 2.0 (the "License"); you may not use this file except
~ in compliance with the License.
~ You may obtain a copy of the License at
~
~    http://www.apache.org/licenses/LICENSE-2.0
~
~ Unless required by applicable law or agreed to in writing,
~ software distributed under the License is distributed on an
~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
~ KIND, either express or implied.  See the License for the
~ specific language governing permissions and limitations
~ under the License.
-->
<template name="createPageOffer" xmlns="http://ws.apache.org/ns/synapse">
    <parameter name="pageId" description="Unique identifier of the page"/>
    <parameter name="title" description="The title of the offer."/>
    <parameter name="message" description="The body text of the offer"/>
    <parameter name="expirationTime" description="The expiration time of the offer."/>
    <parameter name="published"
               description="Whether a post is published. Default is published."/>
    <parameter name="scheduledPublishTime" description="Time when the page post should go live."/>
    <parameter name="terms" description="Terms and conditions of the offer."/>
    <parameter name="imageUrl" description="The URL for the offer's image."/>
    <parameter name="claimLimit"
               description="The maximum number of times the offer can be claimed."/>
    <parameter name="couponType" description="The type of offer."/>
    <parameter name="qrcode" description="QR code."/>
    <parameter name="barcode"
               description="12-character UPC-A or 13-character EAN-13 barcode."/>
    <parameter name="barcodeType" description="Barcode type."/>
    <parameter name="feedTargeting" description="Feed target."/>
    <parameter name="targeting" description="Target"/>
    <parameter name="couponRequired" description="Is the coupon required?"/>
    <parameter name="redemptionLink" description="The URL where the offer may be redeemed."/>
    <parameter name="redemptionCode"
               description="A code to enter on your website to receive the discount or promotion"/>
    <parameter name="reminderTime"
               description="Time before the expiration_time of the offer when the user receives a notification that the offer is about to expire."/>
    <sequence>
        <property name="uri.var.pageId" expression="$func:pageId"/>
        <property name="uri.var.title" expression="$func:title"/>
        <property name="uri.var.message" expression="$func:message"/>
        <property name="uri.var.expirationTime" expression="$func:expirationTime"/>
        <property name="uri.var.published" expression="$func:published"/>
        <property name="uri.var.scheduledPublishTime" expression="$func:scheduledPublishTime"/>
        <property name="uri.var.terms" expression="$func:terms"/>
        <property name="uri.var.imageUrl" expression="$func:imageUrl"/>
        <property name="uri.var.claimLimit" expression="$func:claimLimit"/>
        <property name="uri.var.couponType" expression="$func:couponType"/>
        <property name="uri.var.redemptionLink" expression="$func:redemptionLink"/>
        <property name="uri.var.redemptionCode" expression="$func:redemptionCode"/>
        <property name="uri.var.qrcode" expression="$func:qrcode"/>
        <property name="uri.var.barcode" expression="$func:barcode"/>
        <property name="uri.var.barcodeType" expression="$func:barcodeType"/>
        <property name="uri.var.feedTargeting" expression="$func:feedTargeting"/>
        <property name="uri.var.targeting" expression="$func:targeting"/>
        <property name="uri.var.couponRequired" expression="$func:couponRequired"/>
        <property name="uri.var.reminderTime" expression="$func:reminderTime"/>
        <payloadFactory media-type="json">
            <format>
                {
                "title":"$1",
                "expiration_time":"$2",
                "access_token":"$3"
                }
            </format>
            <args>
                <arg expression="get-property('uri.var.title')"/>
                <arg expression="get-property('uri.var.expirationTime')"/>
                <arg expression="get-property('uri.var.accessToken')"/>
            </args>
        </payloadFactory>
        <script language="js"><![CDATA[
            var message=mc.getProperty('uri.var.message');
            var terms=mc.getProperty('uri.var.terms');
            var published=mc.getProperty('uri.var.published');
            var scheduledPublishTime=mc.getProperty('uri.var.scheduledPublishTime');
            var imageUrl=mc.getProperty('uri.var.imageUrl');
            var claimLimit=mc.getProperty('uri.var.claimLimit');
            var couponType=mc.getProperty('uri.var.couponType');
            var qrcode=mc.getProperty('uri.var.qrcode');
            var barcode=mc.getProperty('uri.var.barcode');
            var barcodeType=mc.getProperty('uri.var.barcodeType');
            var feedTargeting=mc.getProperty('uri.var.feedTargeting');
            var targeting=mc.getProperty('uri.var.targeting');
            var redemptionLink=mc.getProperty('uri.var.redemptionLink');
            var redemptionCode=mc.getProperty('uri.var.redemptionCode');
            var couponRequired=mc.getProperty('uri.var.couponRequired');
            var reminderTime=mc.getProperty('uri.var.reminderTime');

            payload = mc.getPayloadJSON();

            if(terms != null && terms != ""){
                payload.terms = terms;
            }

            if(imageUrl !=null && imageUrl != ""){
                payload.image_url=imageUrl;
            }

            if(message !=null && message != ""){
                payload.message=message;
            }

            if(claimLimit != null && claimLimit != ""){
                payload.claim_limit = claimLimit;
            }

            if(couponType !=null && couponType != ""){
                payload.coupon_type=couponType;
            }

            if(qrcode !=null && qrcode != ""){
                payload.qrcode=qrcode;
            }
            
            if(barcode !=null && barcode != ""){
                payload.barcode=barcode;
            }

            if(barcodeType !=null && barcodeType != ""){
                payload.barcodeType=barcodeType;
            }

            if(redemptionLink !=null && redemptionLink != ""){
                payload.redemption_link=redemptionLink;
            }

            if(redemptionCode !=null && redemptionCode != ""){
                payload.redemption_code=redemptionCode;
            }

            if(published !=null && published != ""){
                payload.published=published;
            }

            if(scheduledPublishTime !=null && scheduledPublishTime != ""){
                payload.scheduled_publish_time=scheduledPublishTime;
            }

            if(reminderTime !=null && reminderTime != ""){
                payload.reminder_time=reminderTime;
            }

            if(couponRequired !=null && couponRequired != ""){
                payload.coupon_required=couponRequired;
            }

            if (feedTargeting != null && feedTargeting != "") {
               var txt = '{"feedTargeting":'+feedTargeting+'}';
               var query="";
               var obj = eval ("(" + txt + ")");
               for(var key in obj.feedTargeting){
                  query += ',' + key + '=' + obj.feedTargeting[key];
               }
               query = query.substring(1, query.length);
               payload.feed_targeting = query;
            }

            if (targeting != null && targeting != "") {
                var txt = '{"targeting":'+targeting+'}';
                var query="";
                var obj = eval ("(" + txt + ")");
                for(var key in obj.targeting){
                    query += ',' + key + '=' + obj.targeting[key];
                }
                query = query.substring(1, query.length);
               payload.targeting = query;
            }

            mc.setPayloadJSON(payload);
        ]]></script>
        <property name="messageType" value="application/x-www-form-urlencoded" scope="axis2"/>
        <call>
            <endpoint>
                <http method="post" uri-template="{uri.var.apiUrl}/{uri.var.apiVersion}/{uri.var.pageId}/offers"/>
            </endpoint>
        </call>
        <!-- Remove response custom header information -->
        <header name="X-FB-Debug" scope="transport" action="remove"/>
        <header name="X-FB-Rev" scope="transport" action="remove"/>
        <header name="WWW-Authenticate" scope="transport" action="remove"/>
    </sequence>
</template>